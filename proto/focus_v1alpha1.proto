syntax = "proto3";

package api.v1alpha1;

// import "google/protobuf/duration.proto";
import "google/protobuf/empty.proto";
// import "google/protobuf/field_mask.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

option go_package = "github.com/grekcy/focus/proto/v1alpha1";

service Focus {
  rpc Version(google.protobuf.Empty) returns (google.protobuf.StringValue) {};
  rpc VersionEx(google.protobuf.Empty) returns (google.protobuf.StringValue) {};

  // returns jwt api key
  rpc LoginWithGoogleOauth(GoogleLoginReq) returns (google.protobuf.StringValue) {};

  // return current user profile
  rpc GetProfile(google.protobuf.Empty) returns (User);

  rpc GetUser(google.protobuf.UInt64Value) returns (User);

  rpc AddCard(AddCardReq) returns (Card);
  rpc ListCards(ListCardReq) returns (ListCardResp) {}
  rpc GetCard(google.protobuf.UInt64Value) returns (Card) {}
  rpc GetCards(GetCardReq) returns (GetCardResp) {}
  rpc GetCardProgressSummary(google.protobuf.UInt64Value) returns (CardProgressSummaryResp) {}
  rpc PatchCard(PatchCardReq) returns (Card) {}
  rpc RerankCard(RankCardReq) returns (google.protobuf.Empty) {}
  rpc DeleteCard(google.protobuf.UInt64Value) returns (google.protobuf.Empty) {}

  rpc CreateLabel(Label) returns (Label) {}
  rpc ListLabels(ListLabelsReq) returns (ListLabelsResp) {}
  rpc UpdateLabel(Label) returns (Label) {}
  rpc DeleteLabel(google.protobuf.UInt64Value) returns (google.protobuf.Empty) {}

  rpc ListChallenges(ListChallengesReq) returns (ListChallengesResp) {}
  rpc GetChallenge(google.protobuf.UInt64Value) returns (Challenge) {}
}

message GoogleLoginReq {
  string credential = 1;
  string client_id = 2;
  string extra = 3;
}

message User {
  uint64 id = 1;
  string uid = 2; // uuid
  string email = 3;
  string name = 4;
}

message Card {
  string uid = 1; // uuid
  uint64 card_no = 2;
  optional uint64 parent_card_no = 3;
  uint32 depth = 4;
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp updated_at = 6;
  optional google.protobuf.Timestamp defer_until = 7;
  optional google.protobuf.Timestamp due_date = 8;
  optional google.protobuf.Timestamp completed_at = 9;
  uint64 creator_id = 10;
  optional uint64 responsibility_id = 11;
  string card_type = 12;
  string status = 13;
  string objective = 14;
  string content = 15;
  repeated uint64 labels = 16;
}

message AddCardReq {
  string objective = 1;
  optional uint64 add_after = 2;
}

message ListCardReq {
  Card start_cond = 1;
  Card cond = 2;
  bool exclude_completed = 3;
  bool include_deferred = 4;
}

message ListCardResp { repeated Card items = 1; }

message GetCardReq { repeated uint64 card_nos = 1; }

message GetCardResp { map<uint64, Card> items = 1; }

message RankCardReq {
  uint64 card_no = 1;
  uint64 target_card_no = 2;
}

message PatchCardReq {
  repeated Field fields = 1;
  Card card = 2;

  enum Field {
    OBJECTIVE = 0;
    COMPLETED_AT = 1;
    CONTENT = 2;
    PARENT_CARD_NO = 3;
    LABEL = 4;
    DEFER_UNTIL = 5;
    DUE_DATE = 6;
    CARD_TYPE = 7;
  }
}

message Label {
  uint64 id = 1;
  string uid = 2; // uuid
  uint64 workspace_id = 3;
  string label = 4;
  string description = 5;
  string color = 6;
  google.protobuf.Timestamp created_at = 7;
}

message CardProgressSummaryResp {
  uint64 total = 1;
  uint64 done = 2;
}

message ListLabelsReq { repeated string labels = 1; }

message ListLabelsResp { repeated Label labels = 1; }

message ListChallengesReq {}

message Challenge {
  Card card = 1; // card information
  // TODO 굳이 이렇게 할 필요 있을까? cardProgressSummary()로 하면 될텐데..
  // progress
  uint64 total_cards = 2;
  uint64 completed_cards = 3;
}

message ListChallengesResp { repeated Challenge items = 1; }