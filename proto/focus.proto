syntax = "proto3";

import "google/protobuf/wrappers.proto";
import "google/protobuf/empty.proto";
// import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/grekcy/focus/proto";

service Focus {}

service V1Alpha1 {
  rpc version(google.protobuf.Empty) returns (google.protobuf.StringValue) {};

  rpc quickAddCard(google.protobuf.StringValue) returns (Card);
  rpc listCards(ListCardReq) returns (ListCardResp) {}
  rpc getCard(google.protobuf.UInt64Value) returns (Card) {}
  rpc getCards(GetCardReq) returns (GetCardResp) {}
  rpc patchCard(PatchCardReq) returns (Card) {}
  rpc rankUpCard(RankCardReq) returns (google.protobuf.Empty) {}
  rpc rankDownCard(RankCardReq) returns (google.protobuf.Empty) {}
  rpc deleteCard(google.protobuf.UInt64Value) returns (google.protobuf.Empty) {}
}

message Card {
  uint64 card_no = 1;
  uint64 rank = 2;
  optional uint64 parent_card_no = 3;
  uint32 depth = 4;
  google.protobuf.Timestamp created_at = 5;
  optional google.protobuf.Timestamp completed_at = 6;
  string subject = 7;
  string content = 8;
}

message ListCardReq {
  bool exclude_completed = 1;
  bool exclude_challenges = 2;
}

message ListCardResp { repeated Card items = 1; }

message GetCardReq { repeated uint64 card_nos = 1; }

message GetCardResp { map<uint64, Card> items = 1; }

message RankCardReq {
  uint64 card_no = 1;
  uint64 target_card_no = 2;
}

enum CardField {
  SUBJECT = 0;
  COMPLETED_AT = 1;
}

message PatchCardReq {
  repeated CardField fields = 1;
  Card card = 2;
}